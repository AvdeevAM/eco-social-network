{"version":3,"file":"static/js/833.518f2800.chunk.js","mappings":"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","sources":["webpack://eco-social-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://eco-social-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","assets/icons/heart.svg","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://eco-social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://eco-social-network/./src/components/Profile/ProfileInfo/ProfileStatusWithHooks.module.css?20f5","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","webpack://eco-social-network/./src/components/Profile/ProfileInfo/Contact.module.css?e51c","components/Profile/ProfileInfo/Contact.jsx","webpack://eco-social-network/./src/components/Profile/ProfileInfo/ProfileInfoDataForm.module.css?3fab","components/Profile/ProfileInfo/ProfileInfoDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://eco-social-network/./src/components/Profile/Profile.module.css?b512","webpack://eco-social-network/./src/components/Profile/Followed/Followed.module.css?6018","components/Profile/Followed/Followed.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__v3+cd\",\"feedTitle\":\"MyPosts_feedTitle__Mvm3w\",\"posts\":\"MyPosts_posts__vpq1W\",\"newMessage\":\"MyPosts_newMessage__AFFuI\",\"newMessageBg\":\"MyPosts_newMessageBg__ovFwR\",\"error\":\"MyPosts_error__w1FRp\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__gptSG\",\"postAuthor\":\"Post_postAuthor__9ie+w\",\"postTextAreaWrapper\":\"Post_postTextAreaWrapper__2DNp5\",\"postTextArea\":\"Post_postTextArea__jnOAE\",\"likeArea\":\"Post_likeArea__XWopF\",\"likeButton\":\"Post_likeButton__CRreo\"};","var _path, _g, _g2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHeart(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 502 502\",\n    style: {\n      enableBackground: \"new 0 0 502 502\"\n    },\n    xmlSpace: \"preserve\",\n    width: 512,\n    height: 512,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FF1D25\"\n    },\n    d: \"M370.994,49.998c-61.509,0-112.296,45.894-119.994,105.306    c-7.698-59.412-58.485-105.306-119.994-105.306C64.176,49.998,10,104.174,10,171.004s80.283,135.528,116.45,166.574    C160.239,366.582,251,452.002,251,452.002s90.761-85.42,124.55-114.424C411.717,306.532,492,237.834,492,171.004    S437.824,49.998,370.994,49.998z\"\n  }), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M251,462.002c-2.464,0-4.928-0.906-6.854-2.718c-0.906-0.853-90.981-85.595-124.21-114.119l-0.348-0.299    C80.771,311.548,0,242.216,0,171.004C0,98.767,58.769,39.998,131.006,39.998c52.959,0,99.547,31.914,119.994,78.382    c20.446-46.468,67.035-78.382,119.994-78.382C443.231,39.998,502,98.767,502,171.004c0,71.211-80.771,140.543-119.588,173.862    l-0.348,0.299c-33.231,28.525-123.304,113.266-124.21,114.119C255.928,461.096,253.464,462.002,251,462.002z M131.006,59.998    C69.797,59.998,20,109.795,20,171.004c0,62.021,78.917,129.761,112.615,158.687l0.348,0.299    c28.14,24.155,96.205,87.815,118.037,108.294c21.832-20.479,89.897-84.139,118.037-108.294l0.348-0.299    C403.083,300.765,482,233.025,482,171.004c0-61.209-49.797-111.006-111.006-111.006c-55.619,0-102.941,41.525-110.077,96.591    c-0.646,4.984-4.891,8.715-9.917,8.715s-9.271-3.73-9.917-8.715C233.948,101.523,186.625,59.998,131.006,59.998z\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M252.008,412.021c-2.445,0-4.895-0.891-6.823-2.691c-26.934-25.15-75.469-70.218-97.909-89.48l-0.304-0.261    c-3.771-3.237-8.046-6.907-12.652-10.936c-4.157-3.636-4.58-9.954-0.943-14.11c3.635-4.158,9.953-4.58,14.11-0.943    c4.536,3.967,8.773,7.604,12.512,10.813l0.304,0.261c21.578,18.523,65.492,59.187,98.532,90.038    c4.037,3.77,4.253,10.097,0.484,14.134C257.35,410.955,254.682,412.021,252.008,412.021z\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M113.283,285.803c-2.51,0-5.021-0.938-6.964-2.825c-6.611-6.417-12.866-12.804-18.592-18.982    c-3.754-4.05-3.514-10.377,0.537-14.132c4.05-3.754,10.377-3.514,14.132,0.537c5.488,5.921,11.495,12.053,17.854,18.227    c3.963,3.847,4.057,10.178,0.21,14.141C118.498,284.788,115.892,285.803,113.283,285.803z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHeart);\nexport default __webpack_public_path__ + \"static/media/heart.7eacb08c415e82a5f40150765ce4de78.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nimport heart from \"./../../../../assets/icons/heart.svg\";\r\nimport default_avatar_small from \"./../../../../assets/images/default_avatar_small.png\";\r\nimport { createButton } from \"../../../common/Button/Button\";\r\n\r\nconst Post = (props) => {\r\n  const likePost = () => {\r\n    props.incrementLikes(props.postId);\r\n  };\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <div className={s.postAuthor}>\r\n        <img src={props.authorizedUserPhoto || default_avatar_small} alt=\"\" />\r\n        {props.fullName.split(\" \")[0] || \"anonymous\"}\r\n      </div>\r\n      <div className={s.postTextAreaWrapper}>\r\n        <div className={s.postTextArea}>\r\n          <span>{props.message}</span>\r\n        </div>\r\n        <div className={s.likeArea}>\r\n          {createButton(s.likeButton, \"Like\", \"button\", {\r\n            onClick: likePost,\r\n          })}\r\n          <span>\r\n            <img src={heart} alt=\"\" />\r\n            {props.likesCount}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { createField } from \"../../../utils/FormControls\";\r\nimport { createButton } from \"../../common/Button/Button\";\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post\r\n      message={p.message}\r\n      likesCount={p.likesCount}\r\n      key={p.id}\r\n      postId={p.id}\r\n      authorizedUserPhoto={props.authorizedUserPhoto}\r\n      incrementLikes={props.incrementLikes}\r\n      fullName={props.fullName}\r\n    />\r\n  ));\r\n\r\n  const addPost = (values, { resetForm }) => {\r\n    props.addPost(values.newPostText);\r\n    resetForm({\r\n      values: {\r\n        newPostText: \"\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const postSchema = yup.object().shape({\r\n    newPostText: yup\r\n      .string()\r\n      .min(1, \"type some text to add post\")\r\n      .max(15, \"caution: message is too long\")\r\n  });\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <div className={s.feedTitle}>\r\n        <h4>My feed</h4>\r\n      </div>\r\n      <div>\r\n        <FormikMyPosts addPost={addPost} postSchema={postSchema} />\r\n      </div>\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FormikMyPosts = (props) => {\r\n  return (\r\n    <Formik\r\n      onSubmit={props.addPost}\r\n      initialValues={{\r\n        newPostText: \"\",\r\n      }}\r\n      validationSchema={props.postSchema}\r\n    >\r\n      {({ handleSubmit, isValid, dirty, touched, errors }) => (\r\n        <Form onSubmit={handleSubmit} className={s.newMessage}>\r\n          <div className={s.newMessageBg}></div>\r\n          {createField(\"textarea\", \"newPostText\", \"write your thoughts here\")}\r\n          {errors.newPostText && (\r\n            <p className={s.error}>{errors.newPostText}</p>\r\n          )}\r\n          {createButton(null, \"Add post\", \"submit\", {\r\n            disabled: !(isValid && dirty),\r\n          })}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  addPost,\r\n  incrementLikes,\r\n} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    authorizedUserPhoto: state.auth.photo,\r\n    fullName: state.auth.fullName,\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n  addPost,\r\n  incrementLikes,\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XH+mM\",\"descriptionBlockAvatar\":\"ProfileInfo_descriptionBlockAvatar__2CX8t\",\"followers\":\"ProfileInfo_followers__0xMMi\",\"descriptionBlockInfo\":\"ProfileInfo_descriptionBlockInfo__3+d3l\",\"descriptionBlockStatus\":\"ProfileInfo_descriptionBlockStatus__whHd5\",\"descriptionBlockAbout\":\"ProfileInfo_descriptionBlockAbout__kegfH\",\"profileInfoDataButton\":\"ProfileInfo_profileInfoDataButton__TMR0k\",\"contacts\":\"ProfileInfo_contacts__EHL5j\",\"lookingForAJob\":\"ProfileInfo_lookingForAJob__eXd3+\",\"profilePhoto\":\"ProfileInfo_profilePhoto__XFo7Q\",\"imageUploadWrapper\":\"ProfileInfo_imageUploadWrapper__08W6k\",\"imageUploadInput\":\"ProfileInfo_imageUploadInput__6Z68v\",\"imageUploadLabel\":\"ProfileInfo_imageUploadLabel__o9BDE\"};","// extracted by mini-css-extract-plugin\nexport default {\"statusInput\":\"ProfileStatusWithHooks_statusInput__Q6OOM\"};","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileStatusWithHooks.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    if (props.isOwner) {\r\n      setEditMode(true);\r\n    }\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={s.statusWrapper}>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || \"-\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            className={s.statusInput}\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileStatusWithHooks;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contactLink\":\"Contact_contactLink__e56KC\"};","import React from \"react\";\r\nimport s from \"./Contact.module.css\";\r\n\r\nconst Contact = ({ contactName, contactValue }) => {\r\n  return (\r\n    <div>\r\n      <b>{contactName}</b>:{\" \"}\r\n      <a\r\n        className={s.contactLink}\r\n        href={contactValue}\r\n        rel=\"noreferrer\"\r\n        target=\"_blank\"\r\n      >\r\n        {contactValue}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ProfileInfoDataForm_form__7iPrD\",\"profileInfoDataFormButton\":\"ProfileInfoDataForm_profileInfoDataFormButton__qc8lO\",\"lookingForAJob\":\"ProfileInfoDataForm_lookingForAJob__bHlGQ\",\"error\":\"ProfileInfoDataForm_error__IhzTZ\"};","import { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport s from \"./ProfileInfoDataForm.module.css\";\r\nimport { createField } from \"../../../utils/FormControls\";\r\nimport { createButton } from \"../../common/Button/Button\";\r\n\r\nconst ProfileInfoDataForm = (props) => {\r\n  const profileInfoDataFormSchema = yup.object().shape({\r\n    fullName: yup\r\n      .string()\r\n      .min(3, \"Too Short!\")\r\n      .max(25, \"Too Long!\")\r\n      .required(\"Required\"),\r\n    aboutMe: yup\r\n      .string()\r\n      .min(3, \"Too Short!\")\r\n      .max(35, \"Too Long!\")\r\n      .required(\"Required\"),\r\n    contacts: yup.object({\r\n      facebook: yup.string().min(3, \"Too Short!\").required(\"Required\"),\r\n      website: yup.string().min(3, \"Too Short!\").required(\"Required\"),\r\n      vk: yup.string().min(3, \"Too Short!\").required(\"Required\"),\r\n      twitter: yup.string().min(3, \"Too Short!\").required(\"Required\"),\r\n      instagram: yup.string().min(3, \"Too Short!\").required(\"Required\"),\r\n      youtube: yup.string().min(3, \"Too Short!\").required(\"Required\"),\r\n      github: yup.string().min(3, \"Too Short!\").required(\"Required\"),\r\n      mainLink: yup.string().min(3, \"Too Short!\").required(\"Required\"),\r\n    }),\r\n  });\r\n  return (\r\n    <Formik\r\n      onSubmit={props.saveProfileInfoData}\r\n      initialValues={{\r\n        ...props.profile,\r\n      }}\r\n      validationSchema={profileInfoDataFormSchema}\r\n    >\r\n      {(formik) => (\r\n        <Form\r\n          onSubmit={formik.handleSubmit}\r\n          className={s.form}\r\n          autoComplete=\"off\"\r\n        >\r\n          {formik.status}\r\n          <div className={s.profileInfoDataFormButton}>\r\n            {createButton(undefined, \"Save\", \"submit\", { props: null })}\r\n          </div>\r\n          <div className={s.fullName}>\r\n            <b>Full name</b>: {createField(\"input\", \"fullName\", \"Full name\")}\r\n            {formik.errors.fullName && (\r\n              <p className={s.error}>{formik.errors.fullName}</p>\r\n            )}\r\n          </div>\r\n          <div className={s.aboutMe}>\r\n            <b>About me</b>: {createField(\"input\", \"aboutMe\", \"About me\")}\r\n            {formik.errors.aboutMe && (\r\n              <p className={s.error}>{formik.errors.aboutMe}</p>\r\n            )}\r\n          </div>\r\n        \r\n          <div className={s.contacts}>\r\n          <b>Contacts</b>\r\n            {Object.keys(props.profile.contacts).map((key) => {\r\n              return (\r\n                <div key={key}>\r\n                  {key}: {createField(\"input\", \"contacts.\" + key, key)}\r\n                  {formik.errors.contacts?.[key] && (\r\n                    <p className={s.error}>{formik.errors.contacts?.[key]}</p>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className={s.lookingForAJob}>\r\n            <b>\r\n              {createField(\r\n                \"input\",\r\n                \"lookingForAJob\",\r\n                null,\r\n                { type: \"checkbox\" },\r\n                \"Looking for a job right now\"\r\n              )}\r\n            </b>\r\n          </div>\r\n          <div className={s.lookingForAJobDescription}>\r\n            <b>Job description</b>:{\" \"}\r\n            {createField(\r\n              \"input\",\r\n              \"lookingForAJobDescription\",\r\n              \"Describe the job you are looking for...\"\r\n            )}\r\n            <p className={s.error}>{formik.errors.lookingForAJobDescription}</p>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoDataForm;\r\n","import React, { useState } from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport symbolYes from \"./../../../assets/images/symbol_yes.png\";\r\nimport symbolNo from \"./../../../assets/images/symbol_no.png\";\r\nimport ProfileStatusWithHooK from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"./../../../assets/images/default_avatar_small.png\";\r\nimport Contact from \"./Contact\";\r\nimport ProfileInfoDataForm from \"./ProfileInfoDataForm\";\r\nimport { createButton } from \"../../common/Button/Button\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  const saveProfileInfoData = (values, submitProps) => {\r\n    props.saveData(values, submitProps.setSubmitting, submitProps.setStatus);\r\n    submitProps.setSubmitting(true);\r\n    setEditMode(false);\r\n  };\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onPhotoSelected = (e) => {\r\n    props.savePhoto(e.target.files[0]);\r\n    if (e.target.files.length) {\r\n    }\r\n  };\r\n  return (\r\n    <div className={s.descriptionBlock}>\r\n      <div className={s.descriptionBlockAvatar}>\r\n        <div>\r\n          <h2>{props.profile.fullName}</h2>\r\n        </div>\r\n        <img\r\n          className={s.profilePhoto}\r\n          src={props.profile.photos.large || userPhoto}\r\n          alt=\"\"\r\n        />\r\n        {props.isOwner && (\r\n          <div className={s.imageUploadWrapper}>\r\n            <label className={s.imageUploadLabel} htmlFor=\"imageUpload\">\r\n              Change picture\r\n            </label>\r\n            <input\r\n              className={s.imageUploadInput}\r\n              type=\"file\"\r\n              name=\"imageUpload\"\r\n              onChange={onPhotoSelected}\r\n            />\r\n          </div>\r\n        )}\r\n        {props.isOwner && (\r\n          <div className={s.followers}>\r\n            <p>{`followers: ${props.followed.length}`}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={s.descriptionBlockInfo}>\r\n        <div className={s.descriptionBlockStatus}>\r\n          <ProfileStatusWithHooK\r\n            isOwner={props.isOwner}\r\n            status={props.status}\r\n            updateStatus={props.updateStatus}\r\n          />\r\n        </div>\r\n        <div className={s.descriptionBlockAbout}>\r\n          {editMode ? (\r\n            <ProfileInfoDataForm\r\n              {...props}\r\n              saveProfileInfoData={saveProfileInfoData}\r\n            />\r\n          ) : (\r\n            <ProfileInfoData\r\n              {...props}\r\n              switchOnEditMode={() => {\r\n                setEditMode(true);\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileInfoData = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.profileInfoDataButton}>\r\n        {props.isOwner &&\r\n          createButton(undefined, \"Edit profile\", \"button\", {\r\n            onClick: props.switchOnEditMode,\r\n          })}\r\n      </div>\r\n      <div className={s.aboutMe}>\r\n        <b>About me</b>: {props.profile.aboutMe}\r\n      </div>\r\n      <div className={s.contacts}>\r\n        <b>Contacts</b>\r\n        {Object.keys(props.profile.contacts).map((key) => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactName={key}\r\n              contactValue={props.profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className={s.lookingForAJob}>\r\n        <b>Looking for a job right now:</b>\r\n        <img\r\n          src={props.profile.lookingForAJob === true ? symbolYes : symbolNo}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      {props.profile.lookingForAJob && (\r\n        <div className={s.lookingForAJobDescription}>\r\n          <b>Job description</b>: {props.profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__HQwUi\"};","// extracted by mini-css-extract-plugin\nexport default {\"followedWrapper\":\"Followed_followedWrapper__iB2wh\",\"title\":\"Followed_title__BvgM3\",\"followedList\":\"Followed_followedList__jXe4K\",\"user\":\"Followed_user__LYSAX\"};","import React from \"react\";\r\nimport s from \"./Followed.module.css\";\r\nimport defaultAvatar from \"./../../../assets/images/default_avatar_small.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Followed = (props) => {\r\n  let followedList = props.followed.map((f) => {\r\n    return <FollowedUser key={f.id} name={f.name} photo={f.photo} id={f.id} />;\r\n  });\r\n  followedList.length = 9;\r\n  return (\r\n    <div className={s.followedWrapper}>\r\n      <div className={s.title}>I'm following them:</div>\r\n      <div className={s.followedList}>{followedList}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FollowedUser = (props) => {\r\n  const navigate = useNavigate();\r\n  const photoSrc = props.photo ? props.photo : defaultAvatar;\r\n\r\n  const toUserProfile = () => {\r\n    navigate(`/profile/${props.id}`, { replace: true });\r\n  };\r\n  return (\r\n    <div className={s.user} onClick={toUserProfile}>\r\n      <div>\r\n        <img src={photoSrc} width=\"40px\" alt=\"\" />\r\n      </div>\r\n      <div>\r\n        {props.name.length > 10\r\n          ? props.name.substring(0, 7) + \"...\"\r\n          : props.name}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Followed;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from \"./Profile.module.css\";\r\nimport Followed from \"./Followed/Followed\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.profile}>\r\n      <ProfileInfo\r\n        saveData={props.saveData}\r\n        isOwner={props.isOwner}\r\n        savePhoto={props.savePhoto}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        followed={props.followed}\r\n      />\r\n      {props.isOwner && <Followed followed={props.followed} />}\r\n      {props.isOwner && <MyPostsContainer />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveData,\r\n} from \"./../../redux/profileReducer\";\r\nimport { WithAuthRedirect } from \"../../HOC/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { WithRouter } from \"../../HOC/WithRouter\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId;\r\n    if (this.props.match !== null) {\r\n      userId = this.props.match.params.userId || this.props.authorizedUserId;\r\n    }\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.match !== this.props.match) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        saveData={this.props.saveData}\r\n        isOwner={!this.props.match}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n        followed={this.props.followed}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  isAuth: state.auth.isAuth,\r\n  authorizedUserId: state.auth.userId,\r\n  followed: state.profilePage.followed,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveData,\r\n  }),\r\n  WithRouter,\r\n  WithAuthRedirect\r\n)(ProfileContainer);\r\n"],"names":["props","className","s","src","authorizedUserPhoto","default_avatar_small","alt","fullName","split","message","createButton","onClick","incrementLikes","postId","heart","likesCount","FormikMyPosts","onSubmit","addPost","initialValues","newPostText","validationSchema","postSchema","handleSubmit","isValid","dirty","errors","touched","createField","disabled","postsElements","posts","map","p","id","yup","shape","min","max","values","resetForm","connect","state","profilePage","auth","photo","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","isOwner","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","contactName","contactValue","href","rel","target","profileInfoDataFormSchema","required","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","saveProfileInfoData","profile","formik","autoComplete","undefined","Object","keys","key","type","lookingForAJobDescription","ProfileInfoData","switchOnEditMode","lookingForAJob","symbolYes","symbolNo","Preloader","photos","large","userPhoto","htmlFor","name","savePhoto","files","length","followed","submitProps","saveData","setSubmitting","FollowedUser","navigate","useNavigate","photoSrc","defaultAvatar","replace","width","substring","followedList","f","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","React","compose","isAuth","WithRouter","WithAuthRedirect"],"sourceRoot":""}