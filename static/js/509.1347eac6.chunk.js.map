{"version":3,"file":"static/js/509.1347eac6.chunk.js","mappings":"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","sources":["HOC/WithAuthRedirect.jsx","webpack://eco-social-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://eco-social-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://eco-social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/Contact.jsx","components/Profile/ProfileInfo/ProfileInfoDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Navigate to=\"/login\" />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent =\r\n    connect(mapStateToProps)(RedirectComponent);\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__v3+cd\",\"posts\":\"MyPosts_posts__vpq1W\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__gptSG\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://cdn-icons-png.flaticon.com/512/147/147142.png\" alt=\"\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { createField } from \"../../../utils/FormControls\";\r\nimport { createButton } from \"../../common/Button/Button\";\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post message={p.message} likesCount={p.likesCount} key={p.id} />\r\n  ));\r\n\r\n  const addPost = (values, { resetForm }) => {\r\n    props.addPost(values.newPostText);\r\n    resetForm({\r\n      values: {\r\n        newPostText: \"\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const postSchema = yup.object().shape({\r\n    newPostText: yup\r\n      .string()\r\n      .max(10, \"Message is too long\")\r\n      .required(\"Type text to send message\"),\r\n  });\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <FormikMyPosts addPost={addPost} postSchema={postSchema} />\r\n      </div>\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FormikMyPosts = (props) => {\r\n  return (\r\n    <Formik\r\n      onSubmit={props.addPost}\r\n      initialValues={{}}\r\n      validationSchema={props.postSchema}\r\n    >\r\n      {({ handleSubmit, isValid, dirty, touched, errors }) => (\r\n        <Form onSubmit={handleSubmit} className={s.newMessage}>\r\n          {createField(\"textarea\", \"newPostText\", \"Type new post\")}\r\n          {touched.newPostText && errors.newPostText && (\r\n            <p className={s.error}>{errors.newPostText}</p>\r\n          )}\r\n          {createButton(undefined, \"Add post\", \"submit\", {\r\n            disabled: !isValid && !dirty && touched.newMessageBody,\r\n          })}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  addPostActionCreator,\r\n} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (text) => {\r\n      dispatch(addPostActionCreator(text));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XH+mM\",\"contacts\":\"ProfileInfo_contacts__EHL5j\",\"lookingForAJob\":\"ProfileInfo_lookingForAJob__eXd3+\",\"profilePhoto\":\"ProfileInfo_profilePhoto__XFo7Q\",\"error\":\"ProfileInfo_error__DbbRi\",\"imageUploadWrapper\":\"ProfileInfo_imageUploadWrapper__08W6k\",\"imageUploadInput\":\"ProfileInfo_imageUploadInput__6Z68v\",\"imageUploadLabel\":\"ProfileInfo_imageUploadLabel__o9BDE\",\"form\":\"ProfileInfo_form__N4061\"};","import React, { useEffect, useState } from \"react\";\r\n// import s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    if (props.isOwner) {\r\n      setEditMode(true);\r\n    }\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <b>Status</b>:\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || \"-\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\n\r\nconst Contact = ({ contactName, contactValue }) => {\r\n  return (\r\n    <div>\r\n      <b>{contactName}</b>: {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport { createField } from \"../../../utils/FormControls\";\r\nimport { createButton } from \"../../common/Button/Button\";\r\n\r\nconst ProfileInfoDataForm = (props) => {\r\n  const profileInfoDataFormSchema = yup.object().shape({\r\n    fullName: yup\r\n      .string()\r\n      .min(3, \"Too Short!\")\r\n      .max(25, \"Too Long!\")\r\n      .required(\"Required\"),\r\n    aboutMe: yup\r\n      .string()\r\n      .min(3, \"Too Short!\")\r\n      .max(35, \"Too Long!\")\r\n      .required(\"Required\"),\r\n    contacts: yup.object({\r\n      facebook: yup.string().min(3, \"Too Short!\").required(\"Required\"),\r\n      website: yup.string().min(3, \"Too Short!\").required(\"Required\"),\r\n      vk: yup.string().min(3, \"Too Short!\").required(\"Required\"),\r\n      twitter: yup.string().min(3, \"Too Short!\").required(\"Required\"),\r\n      instagram: yup.string().min(3, \"Too Short!\").required(\"Required\"),\r\n      youtube: yup.string().min(3, \"Too Short!\").required(\"Required\"),\r\n      github: yup.string().min(3, \"Too Short!\").required(\"Required\"),\r\n      mainLink: yup.string().min(3, \"Too Short!\").required(\"Required\"),\r\n    }),\r\n  });\r\n  return (\r\n    <Formik\r\n      onSubmit={props.saveProfileInfoData}\r\n      initialValues={{\r\n        ...props.profile,\r\n      }}\r\n      validationSchema={profileInfoDataFormSchema}\r\n    >\r\n      {(formik) => (\r\n        <Form\r\n          onSubmit={formik.handleSubmit}\r\n          className={s.form}\r\n          autoComplete=\"off\"\r\n        >\r\n          {formik.status}\r\n          {createButton(undefined, \"Save\", \"submit\", { props: null })}\r\n          <div className={s.fullName}>\r\n            <b>Full name</b>: {createField(\"input\", \"fullName\", \"Full name\")}\r\n            {formik.errors.fullName && (\r\n              <p className={s.error}>{formik.errors.fullName}</p>\r\n            )}\r\n          </div>\r\n          <div className={s.aboutMe}>\r\n            <b>About me</b>: {createField(\"input\", \"aboutMe\", \"About me\")}\r\n            {formik.errors.aboutMe && (\r\n              <p className={s.error}>{formik.errors.aboutMe}</p>\r\n            )}\r\n          </div>\r\n          <b>Contacts</b>:\r\n          <div className={s.contacts}>\r\n            {Object.keys(props.profile.contacts).map((key) => {\r\n              return (\r\n                <div key={key}>\r\n                  {key}: {createField(\"input\", \"contacts.\" + key, key)}\r\n                  {formik.errors.contacts?.[key] && (\r\n                    <p className={s.error}>{formik.errors.contacts?.[key]}</p>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className={s.lookingForAJob}>\r\n            <b>\r\n              {createField(\r\n                \"input\",\r\n                \"lookingForAJob\",\r\n                null,\r\n                { type: \"checkbox\" },\r\n                \"Looking for a job right now\"\r\n              )}\r\n            </b>\r\n          </div>\r\n          <div className={s.lookingForAJobDescription}>\r\n            <b>Job description</b>:{\" \"}\r\n            {createField(\r\n              \"input\",\r\n              \"lookingForAJobDescription\",\r\n              \"Describe the job you are looking for...\"\r\n            )}\r\n            <p className={s.error}>{formik.errors.lookingForAJobDescription}</p>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoDataForm;\r\n","import React, { useState } from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport symbolYes from \"./../../../assets/images/symbol_yes.png\";\r\nimport symbolNo from \"./../../../assets/images/symbol_no.png\";\r\nimport ProfileStatusWithHooK from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"./../../../assets/images/default_avatar_small.png\";\r\nimport Contact from \"./Contact\";\r\nimport ProfileInfoDataForm from \"./ProfileInfoDataForm\";\r\nimport { createButton } from \"../../common/Button/Button\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  const saveProfileInfoData = (values, submitProps) => {\r\n    props.saveData(values, submitProps.setSubmitting, submitProps.setStatus);\r\n    submitProps.setSubmitting(true);\r\n    setEditMode(false);\r\n  };\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  return (\r\n    <div className={s.descriptionBlock}>\r\n      <div>\r\n        <h2>{props.profile.fullName}</h2>\r\n      </div>\r\n      <img\r\n        className={s.profilePhoto}\r\n        src={props.profile.photos.large || userPhoto}\r\n        alt=\"\"\r\n      />\r\n      {props.isOwner && (\r\n        <div className={s.imageUploadWrapper}>\r\n          <label className={s.imageUploadLabel} htmlFor=\"imageUpload\">\r\n            Change picture\r\n          </label>\r\n          <input\r\n            className={s.imageUploadInput}\r\n            type=\"file\"\r\n            name=\"imageUpload\"\r\n            onChange={onPhotoSelected}\r\n          />\r\n        </div>\r\n      )}\r\n      <ProfileStatusWithHooK\r\n      isOwner={props.isOwner}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      {editMode ? (\r\n        <ProfileInfoDataForm\r\n          {...props}\r\n          saveProfileInfoData={saveProfileInfoData}\r\n        />\r\n      ) : (\r\n        <ProfileInfoData\r\n          {...props}\r\n          switchOnEditMode={() => {\r\n            setEditMode(true);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileInfoData = (props) => {\r\n  return (\r\n    <div>\r\n      {props.isOwner &&\r\n        createButton(undefined, \"Edit\", \"button\", {\r\n          onClick: props.switchOnEditMode,\r\n        })}\r\n      <div className={s.aboutMe}>\r\n        <b>About me</b>: {props.profile.aboutMe}\r\n      </div>\r\n      <b>Contacts</b>:\r\n      <div className={s.contacts}>\r\n        {Object.keys(props.profile.contacts).map((key) => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactName={key}\r\n              contactValue={props.profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className={s.lookingForAJob}>\r\n        <b>Looking for a job right now:</b>\r\n        <img\r\n          src={props.profile.lookingForAJob === true ? symbolYes : symbolNo}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      {props.profile.lookingForAJob && (\r\n        <div className={s.lookingForAJobDescription}>\r\n          <b>Job description</b>: {props.profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        saveData={props.saveData}\r\n        isOwner={props.isOwner}\r\n        savePhoto={props.savePhoto}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveData,\r\n} from \"./../../redux/profileReducer\";\r\nimport { WithAuthRedirect } from \"../../HOC/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { WithRouter } from \"../../HOC/WithRouter\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId;\r\n    if (this.props.match !== null) {\r\n      userId = this.props.match.params.userId || this.props.authorizedUserId;\r\n    }\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.match !== this.props.match) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        saveData={this.props.saveData}\r\n        isOwner={!this.props.match}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  isAuth: state.auth.isAuth,\r\n  authorizedUserId: state.auth.userId,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveData,\r\n  }),\r\n  WithRouter,\r\n  WithAuthRedirect\r\n)(ProfileContainer);\r\n"],"names":["mapStateToProps","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","className","s","src","alt","message","likesCount","FormikMyPosts","onSubmit","addPost","initialValues","validationSchema","postSchema","handleSubmit","isValid","dirty","touched","errors","createField","newPostText","createButton","undefined","disabled","newMessageBody","postsElements","posts","map","p","id","yup","shape","max","required","values","resetForm","profilePage","dispatch","text","addPostActionCreator","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","isOwner","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","contactName","contactValue","profileInfoDataFormSchema","fullName","min","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","saveProfileInfoData","profile","formik","autoComplete","Object","keys","key","type","lookingForAJobDescription","ProfileInfoData","onClick","switchOnEditMode","lookingForAJob","symbolYes","symbolNo","Preloader","photos","large","userPhoto","htmlFor","name","target","files","length","savePhoto","submitProps","saveData","setSubmitting","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","compose","WithRouter"],"sourceRoot":""}