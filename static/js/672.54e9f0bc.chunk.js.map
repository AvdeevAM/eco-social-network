{"version":3,"file":"static/js/672.54e9f0bc.chunk.js","mappings":"iPAIIA,EAAkB,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,SAGRE,EAAmB,SAACC,GAAe,IACxCC,EADuC,0IAE3C,WACE,OAAKC,KAAKC,MAAMN,QAGT,SAACG,GAAD,UAAeE,KAAKC,SAFlB,SAAC,KAAD,CAAUC,GAAG,eAJmB,GACbC,EAAAA,WAUhC,OADEC,EAAAA,EAAAA,IAAQX,EAARW,CAAyBL,K,8GCjB7B,G,QAAA,CAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,YAAc,6BAA6B,WAAa,4BAA4B,MAAQ,yB,SCgBlQ,EAdgB,SAACE,GACf,OAAgC,IAAzBA,EAAMI,QAAQC,QACnB,iBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,YAAjC,WACE,gBAAKC,IAAI,wDAAwDC,IAAI,KACpET,EAAMI,QAAQA,YAGjB,iBAAKE,UAAWC,EAAAA,OAAhB,WACE,gBAAKC,IAAI,wDAAwDC,IAAI,KACpET,EAAMI,QAAQA,Y,UCErB,EAVmB,SAACJ,GAClB,IAAIU,EAAO,YAAcV,EAAMW,GAC/B,OACE,iBAAKL,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,WACE,gBAAKC,IAAI,wDAAwDC,IAAI,MACrE,SAAC,KAAD,CAASR,GAAIS,EAAb,SAAoBV,EAAMY,W,mBC4B1BC,EAAgB,SAACb,GACrB,OACE,SAAC,KAAD,CACEc,SAAUd,EAAMe,cAChBC,cAAe,GACfC,iBAAkBjB,EAAMkB,cAH1B,SAKG,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,OAAQC,EAAzC,EAAyCA,QAAzC,OACC,UAAC,KAAD,CAAMT,SAAUK,EAAcb,UAAWC,EAAAA,WAAzC,WACE,4BACE,SAAC,KAAD,CACEiB,UAAU,WACVZ,KAAK,iBACLa,YAAY,uBAEbF,EAAQG,gBAAkBJ,EAAOI,iBAChC,cAAGpB,UAAWC,EAAAA,MAAd,SAAwBe,EAAOI,qBAGnC,0BACE,mBAAQC,UAAWP,IAAYC,GAASE,EAAQG,eAAgBE,KAAK,SAArE,mCAQZ,EA1DgB,SAAC5B,GACf,IAAI6B,EAAkB7B,EAAM8B,aAAaC,QAAQC,KAAI,SAACC,GAAD,OACnD,SAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMD,GAAIsB,EAAEtB,IAASsB,EAAEtB,OAEzCuB,EAAmBlC,EAAM8B,aAAaK,SAASH,KAAI,SAACI,GAAD,OACrD,SAAC,EAAD,CAAShC,QAASgC,GAAQA,EAAEzB,OAOxBO,EAAgBmB,EAAAA,KAAaC,MAAM,CACvCZ,eAAgBW,EAAAA,KAEbE,IAAI,GAAI,uBACRC,SAAS,+BAGd,OACE,iBAAKlC,UAAWC,EAAAA,QAAhB,WACE,gBAAKD,UAAWC,EAAAA,aAAhB,SAAiCsB,KACjC,iBAAKvB,UAAWC,EAAAA,SAAhB,UACG2B,GACD,SAACrB,EAAD,CAAeE,cAhBD,SAAC0B,GACnBzC,EAAM0C,YAAYD,EAAOf,iBAewBR,cAAeA,WCTpE,GAAeyB,EAAAA,EAAAA,KACbxC,EAAAA,EAAAA,KAfsB,SAACV,GACvB,MAAO,CACLqC,aAAcrC,EAAMmD,gBAIG,SAACC,GAC1B,MAAO,CACLH,YAAa,SAACtC,GACZyC,GAASC,EAAAA,EAAAA,GAAyB1C,SAOtCR,EAAAA,EAFF,CAGEmD","sources":["HOC/WithAuthRedirect.jsx","webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Navigate to=\"/login\" />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent =\r\n    connect(mapStateToProps)(RedirectComponent);\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__BGMuL\",\"dialogsItems\":\"Dialogs_dialogsItems__fuaVX\",\"active\":\"Dialogs_active__sxp3s\",\"messages\":\"Dialogs_messages__cxlwV\",\"mineMessage\":\"Dialogs_mineMessage__jIqqq\",\"newMessage\":\"Dialogs_newMessage__OAP42\",\"error\":\"Dialogs_error__MCd1B\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return props.message.isMine === true ? (\r\n    <div className={s.dialog + \" \" + s.mineMessage}>\r\n      <img src=\"https://cdn-icons-png.flaticon.com/512/147/147142.png\" alt=\"\" />\r\n      {props.message.message}\r\n    </div>\r\n  ) : (\r\n    <div className={s.dialog}>\r\n      <img src=\"https://cdn-icons-png.flaticon.com/512/147/147144.png\" alt=\"\" />\r\n      {props.message.message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <img src=\"https://cdn-icons-png.flaticon.com/512/147/147144.png\" alt=\"\" />\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogsElements = props.messagesPage.dialogs.map((d) => (\r\n    <DialogItem name={d.name} id={d.id} key={d.id} />\r\n  ));\r\n  let messagesElements = props.messagesPage.messages.map((m) => (\r\n    <Message message={m} key={m.id} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  const messageSchema = yup.object().shape({\r\n    newMessageBody: yup\r\n      .string()\r\n      .max(10, \"Message is too long\")\r\n      .required(\"Type text to send message\"),\r\n  });\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        {messagesElements}\r\n        <FormikDialogs addNewMessage={addNewMessage} messageSchema={messageSchema} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FormikDialogs = (props) => {\r\n  return (\r\n    <Formik\r\n      onSubmit={props.addNewMessage}\r\n      initialValues={{}}\r\n      validationSchema={props.messageSchema}\r\n    >\r\n      {({ handleSubmit, isValid, dirty, errors, touched}) => (\r\n        <Form onSubmit={handleSubmit} className={s.newMessage}>\r\n          <div>\r\n            <Field\r\n              component=\"textarea\"\r\n              name=\"newMessageBody\"\r\n              placeholder=\"Enter your message\"\r\n            />\r\n            {touched.newMessageBody && errors.newMessageBody && (\r\n              <p className={s.error}>{errors.newMessageBody}</p>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <button disabled={!isValid && !dirty && touched.newMessageBody} type=\"submit\">Send message</button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { WithAuthRedirect } from \"../../HOC/WithAuthRedirect\";\r\nimport {\r\n  sendMessageActionCreator,\r\n} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    messagesPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (message) => {\r\n      dispatch(sendMessageActionCreator(message));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  WithAuthRedirect\r\n)(Dialogs);\r\n"],"names":["mapStateToProps","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","message","isMine","className","s","src","alt","path","id","name","FormikDialogs","onSubmit","addNewMessage","initialValues","validationSchema","messageSchema","handleSubmit","isValid","dirty","errors","touched","component","placeholder","newMessageBody","disabled","type","dialogsElements","messagesPage","dialogs","map","d","messagesElements","messages","m","yup","shape","max","required","values","sendMessage","compose","dialogsPage","dispatch","sendMessageActionCreator","Dialogs"],"sourceRoot":""}