{"version":3,"file":"static/js/815.e7ea1ae3.chunk.js","mappings":"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","sources":["HOC/WithAuthRedirect.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Navigate to=\"/login\" />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent =\r\n    connect(mapStateToProps)(RedirectComponent);\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__v3+cd\",\"posts\":\"MyPosts_posts__vpq1W\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__gptSG\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://cdn-icons-png.flaticon.com/512/147/147142.png\" alt=\"\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post message={p.message} likesCount={p.likesCount} key={p.id} />\r\n  ));\r\n\r\n  const addPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  const postSchema = yup.object().shape({\r\n    newPostText: yup\r\n      .string()\r\n      .max(10, \"Message is too long\")\r\n      .required(\"Type text to send message\"),\r\n  });\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <FormikProfile addPost={addPost} postSchema={postSchema} />\r\n      </div>\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FormikProfile = (props) => {\r\n  return (\r\n    <Formik\r\n      onSubmit={props.addPost}\r\n      initialValues={{}}\r\n      validationSchema={props.postSchema}\r\n    >\r\n      {({ handleSubmit, isValid, dirty, touched, errors }) => (\r\n        <Form onSubmit={handleSubmit} className={s.newMessage}>\r\n          <div>\r\n            <Field\r\n              component=\"textarea\"\r\n              placeholder=\"Type new post\"\r\n              name=\"newPostText\"\r\n            />\r\n            {touched.newPostText && errors.newPostText && (\r\n              <p className={s.error}>{errors.newPostText}</p>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <button disabled={!isValid && !dirty} type=\"submit\">\r\n              Add post\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  addPostActionCreator,\r\n} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (text) => {\r\n      dispatch(addPostActionCreator(text));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XH+mM\",\"contacts\":\"ProfileInfo_contacts__EHL5j\",\"lookingForAJob\":\"ProfileInfo_lookingForAJob__eXd3+\",\"profilePhoto\":\"ProfileInfo_profilePhoto__XFo7Q\"};","import React, { useEffect, useState } from \"react\";\r\n// import s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"--------------\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport symbolYes from \"./../../../assets/images/symbol_yes.png\";\r\nimport symbolNo from \"./../../../assets/images/symbol_no.png\";\r\nimport ProfileStatusWithHooK from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"./../../../assets/images/default_avatar_small.png\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <div>\r\n          <h2>{props.profile.fullName}</h2>\r\n        </div>\r\n        <img className={s.profilePhoto} src={props.profile.photos.large || userPhoto} alt=\"\" />\r\n        {props.isOwner && \r\n        <input type=\"file\" onChange={onPhotoSelected}/>}\r\n        <ProfileStatusWithHooK status={props.status} updateStatus={props.updateStatus}/>\r\n        <div className={s.contacts}>\r\n          My contacts:\r\n          <ul>\r\n            <li>{props.profile.contacts.facebook}</li>\r\n            <li>{props.profile.contacts.vk}</li>\r\n            <li>{props.profile.contacts.twitter}</li>\r\n            <li>{props.profile.contacts.github}</li>\r\n          </ul>\r\n        </div>\r\n        <div className={s.lookingForAJob}>\r\n          Looking for a job right now:\r\n          <img\r\n            src={props.profile.lookingForAJob === true ? symbolYes : symbolNo} alt=\"\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        savePhoto={props.savePhoto}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateStatus,\r\n  savePhoto\r\n} from \"./../../redux/profileReducer\";\r\nimport { WithAuthRedirect } from \"../../HOC/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { WithRouter } from \"../../HOC/WithRouter\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId;\r\n    if (this.props.match !== null) {\r\n      userId = this.props.match.params.userId || this.props.authorizedUserId;\r\n    }\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.match !== this.props.match) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        isOwner={!this.props.match}\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  isAuth: state.auth.isAuth,\r\n  authorizedUserId: state.auth.userId,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getUserStatus, updateStatus, savePhoto }),\r\n  WithRouter,\r\n  WithAuthRedirect\r\n)(ProfileContainer);\r\n"],"names":["mapStateToProps","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","className","s","src","alt","message","likesCount","FormikProfile","onSubmit","addPost","initialValues","validationSchema","postSchema","handleSubmit","isValid","dirty","touched","errors","component","placeholder","name","newPostText","disabled","type","postsElements","posts","map","p","id","yup","shape","max","required","values","profilePage","dispatch","text","addPostActionCreator","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","Preloader","fullName","photos","large","userPhoto","isOwner","target","files","length","savePhoto","contacts","facebook","vk","twitter","github","lookingForAJob","symbolYes","symbolNo","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","compose","WithRouter"],"sourceRoot":""}